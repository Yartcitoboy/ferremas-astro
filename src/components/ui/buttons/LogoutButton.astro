---
const { title = "Salir" } = Astro.props;

interface Props {
  title?: string;
}

const baseClasses =
  "flex items-center gap-x-2 text-base md:text-sm font-medium text-neutral-600 ring-zinc-500 transition duration-300 focus-visible:ring-3 outline-hidden";
const hoverClasses = "hover:text-red-500 dark:hover:text-red-400";
const darkClasses =
  "dark:border-neutral-700 dark:text-neutral-400 dark:ring-zinc-200 dark:focus:outline-hidden";
const mdClasses = "md:my-6 md:border-s md:border-neutral-300 md:ps-6 ml-4"; // Añadí ml-4 para un poco de margen
const txtSizeClasses = "2xl:text-base";
const logoutSVG = `<svg
  class="h-4 w-4 shrink-0"
  width="24"
  height="24"
  viewBox="0 0 24 24"
  fill="none"
  stroke="currentColor"
  stroke-width="2"
  stroke-linecap="round"
  stroke-linejoin="round"
>
  <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
  <polyline points="16 17 21 12 16 7"></polyline>
  <line x1="21" y1="12" x2="13" y2="12"></line>
</svg>`;
---

<button
  type="button"
  class={`${baseClasses} ${hoverClasses} ${darkClasses} ${mdClasses} ${txtSizeClasses}`}
  id="logout-button"
>
  <Fragment set:html={logoutSVG} />
  {title}
</button>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const btn = document.getElementById('logout-button'); // <-- aquí el id correcto
    btn?.addEventListener('click', () => {
      localStorage.removeItem('accessToken');
      window.dispatchEvent(new CustomEvent('logout-success'));
      const modal = document.getElementById('hs-user-menu-modal');
      if (modal) modal.classList.add('hidden');
      window.location.href = '/';
    });
  });
</script>