---
// filepath: d:\ScrewFast\src\pages\users\dashContador.astro
import { DollarSign, Truck, Search } from "@lucide/astro";
import MainLayout from "@/layouts/MainLayout.astro";
---

<MainLayout>
  <div class="flex min-h-screen flex-col bg-neutral-900 text-white">
    <!-- Header -->
    <header class="sticky top-0 z-10 flex h-16 items-center gap-4 border-b border-neutral-700 bg-neutral-800 px-6">
      <h1 class="text-xl font-semibold text-orange-500">Panel de Contador</h1>
    </header>

    <!-- Navigation Bar -->
    <nav class="flex border-b border-neutral-700 bg-neutral-800">
      <button class="px-6 py-3 focus:outline-none focus:bg-neutral-700 active bg-neutral-700" data-tab="pagos">
        <DollarSign class="h-5 w-5 text-orange-500" />
        Confirmar Pagos
      </button>
      <button class="px-6 py-3 focus:outline-none focus:bg-neutral-700" data-tab="entregas">
        <Truck class="h-5 w-5 text-orange-500" />
        Registrar Entregas
      </button>
      <div class="ml-auto flex items-center gap-2 px-6">
        <input
          type="text"
          id="search"
          placeholder="Buscar..."
          class="rounded-lg border border-neutral-700 bg-neutral-800 px-3 py-2 text-sm text-white placeholder-neutral-500 focus:ring-2 focus:ring-orange-500 focus:outline-none"
        />
        <button
          id="filter"
          class="flex items-center gap-2 rounded-lg border border-neutral-700 bg-neutral-800 px-3 py-2 text-sm text-white hover:bg-neutral-700"
        >
          <Search class="h-5 w-5 text-orange-500" />
          Filtrar
        </button>
      </div>
    </nav>

    <!-- Main Content -->
    <div class="flex flex-1">
      <!-- Pagos -->
      <section id="pagos" class="flex-1 p-6">
        <h2 class="text-lg font-semibold text-orange-500 mb-4">Confirmar Pagos</h2>
        <table class="w-full border-collapse text-left text-sm text-neutral-400">
          <thead class="bg-neutral-700 text-neutral-300">
            <tr>
              <th class="border border-neutral-700 px-4 py-2">ID Pago</th>
              <th class="border border-neutral-700 px-4 py-2">ID Pedido</th>
              <th class="border border-neutral-700 px-4 py-2">Método</th>
              <th class="border border-neutral-700 px-4 py-2">Fecha</th>
              <th class="border border-neutral-700 px-4 py-2">Monto</th>
              <th class="border border-neutral-700 px-4 py-2">Estado</th>
              <th class="border border-neutral-700 px-4 py-2">Acciones</th>
            </tr>
          </thead>
          <tbody id="pagos-tbody">
            <!-- Se llena con JS -->
          </tbody>
        </table>
      </section>

      <!-- Entregas (puedes implementar luego) -->
      <section id="entregas" class="hidden flex-1 p-6">
        <h2 class="text-lg font-semibold text-orange-500 mb-4">Registrar Entregas</h2>
        <table class="w-full border-collapse text-left text-sm text-neutral-400">
          <thead class="bg-neutral-700 text-neutral-300">
            <tr>
              <th class="border border-neutral-700 px-4 py-2">ID Entrega</th>
              <th class="border border-neutral-700 px-4 py-2">Cliente</th>
              <th class="border border-neutral-700 px-4 py-2">Fecha</th>
              <th class="border border-neutral-700 px-4 py-2">Estado</th>
              <th class="border border-neutral-700 px-4 py-2">Acciones</th>
            </tr>
          </thead>
          <tbody id="entregas-tbody">
            <!-- Se llena con JS si lo necesitas -->
          </tbody>
        </table>
      </section>
    </div>
  </div>

  <script type="module">
    // --- Tabs ---
    document.addEventListener('DOMContentLoaded', () => {
      // Mostrar la sección de pagos por defecto
      const tabs = document.querySelectorAll('[data-tab]');
      const sections = {
        pagos: document.getElementById('pagos'),
        entregas: document.getElementById('entregas'),
      };
      sections.pagos.classList.remove('hidden');
      tabs.forEach(tab => {
        if (tab.dataset.tab === 'pagos') {
          tab.classList.add('active', 'bg-neutral-700');
        } else {
          tab.classList.remove('active', 'bg-neutral-700');
        }
      });
      tabs.forEach(tab => {
        tab.addEventListener('click', () => {
          const target = tab.dataset.tab;
          if (!target) return;
          Object.values(sections).forEach(section => section.classList.add('hidden'));
          if (sections[target]) sections[target].classList.remove('hidden');
          tabs.forEach(t => t.classList.remove('active', 'bg-neutral-700'));
          tab.classList.add('active', 'bg-neutral-700');
        });
      });

      fetchPagosPendientes();
    });

    // --- Pagos ---
    async function fetchPagosPendientes() {
      try {
        const res = await fetch("http://localhost:6500/pago/pendientes");
        let pagos = await res.json();
        if (pagos && pagos.pagos) pagos = pagos.pagos;
        if (!Array.isArray(pagos)) pagos = [];
        renderPagosTable(pagos);
      } catch (e) {
        renderPagosTable([]);
      }
    }

    function renderPagosTable(pagos) {
      const tbody = document.getElementById("pagos-tbody");
      if (!tbody) return;
      tbody.innerHTML = "";
      pagos.forEach(pago => {
        const monto = Number(pago.monto) || 0;
        const tr = document.createElement("tr");
        tr.className = "hover:bg-neutral-700";
        tr.innerHTML = `
          <td class="border border-neutral-700 px-4 py-2">${pago.id_pago ?? ""}</td>
          <td class="border border-neutral-700 px-4 py-2">${pago.id_pedido ?? ""}</td>
          <td class="border border-neutral-700 px-4 py-2">${pago.metodo_pago ?? ""}</td>
          <td class="border border-neutral-700 px-4 py-2">${pago.fecha_pago ?? ""}</td>
          <td class="border border-neutral-700 px-4 py-2">$${monto.toFixed(2)}</td>
          <td class="border border-neutral-700 px-4 py-2">${pago.estado ?? ""}</td>
          <td class="border border-neutral-700 px-4 py-2">
            <button class="flex items-center gap-1 rounded-lg bg-green-500 px-3 py-1 text-sm text-white hover:bg-green-600 confirmar-btn" data-id="${pago.id_pago ?? ""}">
              <svg class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M5 13l4 4L19 7"></path></svg>
              Confirmar
            </button>
          </td>
        `;
        tbody.appendChild(tr);
      });

      // Listeners para confirmar
      tbody.querySelectorAll('.confirmar-btn').forEach(btn => {
        btn.addEventListener('click', async () => {
          const idPago = btn.getAttribute('data-id');
          if (!idPago) return alert("ID de pago no válido");
          const res = await fetch(`http://localhost:6500/pago/${idPago}/confirmar`, { method: "POST" });
          if (res.ok) {
            fetchPagosPendientes(); // Refresca la tabla
          } else {
            alert("Error al confirmar el pago");
          }
        });
      });
    }
  </script>
</MainLayout>